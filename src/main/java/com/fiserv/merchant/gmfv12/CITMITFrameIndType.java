//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2022.09.02 at 12:35:42 PM IST 
//


package com.fiserv.merchant.gmfv12;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CITMITFrameIndType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CITMITFrameIndType">
 *   &lt;restriction base="{com/fiserv/Merchant/gmfV12.04}Len4AN">
 *     &lt;enumeration value="C101"/>
 *     &lt;enumeration value="C102"/>
 *     &lt;enumeration value="C103"/>
 *     &lt;enumeration value="C104"/>
 *     &lt;enumeration value="M101"/>
 *     &lt;enumeration value="M102"/>
 *     &lt;enumeration value="M103"/>
 *     &lt;enumeration value="M104"/>
 *     &lt;enumeration value="M205"/>
 *     &lt;enumeration value="M206"/>
 *     &lt;enumeration value="M207"/>
 *     &lt;enumeration value="M208"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CITMITFrameIndType")
@XmlEnum
public enum CITMITFrameIndType {

    @XmlEnumValue("C101")
    C_101("C101"),
    @XmlEnumValue("C102")
    C_102("C102"),
    @XmlEnumValue("C103")
    C_103("C103"),
    @XmlEnumValue("C104")
    C_104("C104"),
    @XmlEnumValue("M101")
    M_101("M101"),
    @XmlEnumValue("M102")
    M_102("M102"),
    @XmlEnumValue("M103")
    M_103("M103"),
    @XmlEnumValue("M104")
    M_104("M104"),
    @XmlEnumValue("M205")
    M_205("M205"),
    @XmlEnumValue("M206")
    M_206("M206"),
    @XmlEnumValue("M207")
    M_207("M207"),
    @XmlEnumValue("M208")
    M_208("M208");
    private final String value;

    CITMITFrameIndType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CITMITFrameIndType fromValue(String v) {
        for (CITMITFrameIndType c: CITMITFrameIndType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
